@{
    ViewData["Title"] = "API 测试";
}

<div class="container">
    <h1>API 测试工具</h1>
    
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="method">请求方法</label>
                <select class="form-control" id="method">
                    <option>GET</option>
                    <option>POST</option>
                    <option>PUT</option>
                    <option>DELETE</option>
                </select>
            </div>
            
            <div class="form-group">
                <label for="url">请求URL</label>
                <input type="text" class="form-control" id="url" placeholder="https://example.com/api">
            </div>
            
            <div class="form-group">
                <label for="headers">请求头</label>
                <textarea class="form-control" id="headers" rows="3" placeholder="Content-Type: application/json"></textarea>
            </div>
            
            <div class="form-group">
                <label for="body">请求体</label>
                <textarea class="form-control" id="body" rows="5" placeholder="{}"></textarea>
            </div>
            
            <button class="btn btn-primary" onclick="sendRequest()">发送请求</button>
        </div>
        
        <div class="col-md-6">
            <h4>响应</h4>
            <pre id="response"></pre>
        </div>
    </div>
</div>

@section Scripts {
<script>
function sendRequest() {
    const method = document.getElementById('method').value;
    const url = document.getElementById('url').value;
    const headers = parseHeaders(document.getElementById('headers').value);
    const body = document.getElementById('body').value;
    
    fetch(url, {
        method: method,
        headers: headers,
        body: method !== 'GET' ? body : null
    })
    .then(async response => {
        const responseDiv = document.getElementById('response');
        responseDiv.innerHTML = `Status: ${response.status} ${response.statusText}\n\n`;
        
        try {
            const contentType = response.headers.get('content-type');
            if (contentType && contentType.includes('application/json')) {
                const data = await response.json();
                responseDiv.textContent += JSON.stringify(data, null, 2);
            } else {
                const text = await response.text();
                responseDiv.textContent += text;
            }
        } catch (error) {
            console.error('Response parsing error:', error);
            responseDiv.textContent += `Error parsing response: ${error.message}`;
        }
    })
    .catch(error => {
        console.error('Request error:', error);
        document.getElementById('response').textContent = `Request failed: ${error.message}`;
    });
}

function parseHeaders(headerText) {
    const headers = new Headers();
    headerText.split('\n').forEach(line => {
        const [key, value] = line.split(':');
        if (key && value) {
            headers.append(key.trim(), value.trim());
        }
    });
    return headers;
}
</script>
}
